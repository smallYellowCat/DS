package com.doudou.plan.java.rmi;

/**
 *
 * RMI应用程序包含两部分，服务端和客户端。通常情况下，服务端创建一些远程对象，
 * 并让这些对象的引用可访问，随后等待客户端的调用。客户端获取服务器上一个或多
 * 个远程对象的远程引用，然后调用他们的方法。
 *
 * 服务端和客户端通过RMI提供的机制来进行通信和传递数据。这样的应用程序有时称
 * 为分布式对象应用程序。
 *
 * 此程序需要执行的操作：
 *
 * 1. 找到远程对象 ：应用程序可以使用各种机制来获取远程对象的引用。 例如：可以
*                 使用RMI的简单命名功能（RMI注册表）注册其远程对象。或者应
 *                用程序可以以其他远程调用的一部分传递并返回远程对象。
 * 2. 与远程对象通信 ：远程对象之间的通信细节由RMI处理。对程序员而言，远程通信
 *                  看起来类似常规的java方法调用。
 * 3. 为被传递的对象加载类定义 ：
 * @author 豆豆
 * @date 2019/11/18 20:46
 * @flag 以万物智能，化百千万亿身
 */
public class RMI {

}
